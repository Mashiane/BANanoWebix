AppType=JavaFX
Build1=Default,b4j.example
File1=alasql.min.js
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=bananopostprocessor
Library4=bananowebix
Library5=banano
Module1=pgGoDown
Module2=pgindex
NumberOfFiles=1
NumberOfLibraries=5
NumberOfModules=2
Version=8
@EndOfDesignText@
#Region Project Attributes 
	 
#End Region

Sub Process_Globals
	Public BANano As BANano 'ignore
	Public AppName As String = "WareHouse"
	Private Publish As String
	Private BP As BANanoPostProcessor
	Public dbName As String
	Private warehouse As BANanoSQL
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	Publish = "C:\laragon\www"
	Dim Version As String = DateTime.now
	Dim appFile As String = $"app${Version}.js"$
	BANano.Initialize("BANano", AppName,1)
	BANano.HTML_NAME = "index.html"
	BANano.Header.Title = AppName
	BANano.JAVASCRIPT_NAME = appFile
	'
	BANano.Header.AddCSSFile("contrast.min.css")
	BANano.Header.AddJavascriptFile("contrast.skin.js")
	
	'BANano.TranspilerOptions.ShowWarningDeadCode = True
	'BANano.TranspilerOptions.RemoveDeadCode = True
	BANano.TranspilerOptions.UseServiceWorker = False
	'BANano.TranspilerOptions.MergeAllCSSFiles = True
	'BANano.TranspilerOptions.MergeAllJavascriptFiles = True
	'php
	BANano.Build(Publish)
	'post processor
	BP.Initialize
	BP.PublishPath = Publish
	BP.ShortName = AppName
	BP.AssetsPath = BANano.ASSETS_FOLDER
	BP.ScriptsPath = BANano.SCRIPTS_FOLDER
	BP.StylesPath = BANano.STYLES_FOLDER
	BP.ScriptFile = BANano.JAVASCRIPT_NAME
	BP.UnzipFonts
	BP.UnzipFile("extras.zip")
	BP.Open(True)
	ExitApplication
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub


Sub BANano_Ready()
	Dim mgodown As Map = CreateMap()
	mgodown.put("wh_no","INT")
	mgodown.put("wh_name","STRING")
	
	'open the database connection
	warehouse.OpenWait("warehouse", "warehouse")
	'initialize the bananosql helper class
	Dim alaSQL As BANanoAlaSQL
	alaSQL.Initialize
	'generate the resultset structure to execute
	Dim rsa As AlaSQLResultSet = alaSQL.CreateTable("godown", mgodown, "wh_no")
	'execute the resultset structure and get the result
	rsa.Result = warehouse.ExecuteWait(rsa.query, rsa.args)
	'
	pgindex.Init
End Sub
